#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp5
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="books")]
	public partial class DataClasses_booksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertbooks_new(books_new instance);
    partial void Updatebooks_new(books_new instance);
    partial void Deletebooks_new(books_new instance);
    partial void InsertSpr_format(Spr_format instance);
    partial void UpdateSpr_format(Spr_format instance);
    partial void DeleteSpr_format(Spr_format instance);
    partial void InsertSpr_izd(Spr_izd instance);
    partial void UpdateSpr_izd(Spr_izd instance);
    partial void DeleteSpr_izd(Spr_izd instance);
    partial void InsertSpr_themes(Spr_themes instance);
    partial void UpdateSpr_themes(Spr_themes instance);
    partial void DeleteSpr_themes(Spr_themes instance);
    partial void InsertSpr_kategory(Spr_kategory instance);
    partial void UpdateSpr_kategory(Spr_kategory instance);
    partial void DeleteSpr_kategory(Spr_kategory instance);
    #endregion
		
		public DataClasses_booksDataContext() : 
				base(global::WindowsFormsApp5.Properties.Settings.Default.booksConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_booksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_booksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_booksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_booksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<books_new> books_new
		{
			get
			{
				return this.GetTable<books_new>();
			}
		}
		
		public System.Data.Linq.Table<Spr_format> Spr_format
		{
			get
			{
				return this.GetTable<Spr_format>();
			}
		}
		
		public System.Data.Linq.Table<Spr_izd> Spr_izd
		{
			get
			{
				return this.GetTable<Spr_izd>();
			}
		}
		
		public System.Data.Linq.Table<Spr_themes> Spr_themes
		{
			get
			{
				return this.GetTable<Spr_themes>();
			}
		}
		
		public System.Data.Linq.Table<Spr_kategory> Spr_kategory
		{
			get
			{
				return this.GetTable<Spr_kategory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.books_new")]
	public partial class books_new : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _N;
		
		private System.Nullable<double> _Code;
		
		private bool _New;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<double> _Pages;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<double> _Pressrun;
		
		private System.Nullable<int> _izd_id;
		
		private System.Nullable<int> _format_id;
		
		private System.Nullable<int> _themes_id;
		
		private System.Nullable<int> _kategory_id;
		
		private EntityRef<Spr_format> _Spr_format;
		
		private EntityRef<Spr_izd> _Spr_izd;
		
		private EntityRef<Spr_themes> _Spr_themes;
		
		private EntityRef<Spr_kategory> _Spr_kategory;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNChanging(int value);
    partial void OnNChanged();
    partial void OnCodeChanging(System.Nullable<double> value);
    partial void OnCodeChanged();
    partial void OnNewChanging(bool value);
    partial void OnNewChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnPagesChanging(System.Nullable<double> value);
    partial void OnPagesChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPressrunChanging(System.Nullable<double> value);
    partial void OnPressrunChanged();
    partial void Onizd_idChanging(System.Nullable<int> value);
    partial void Onizd_idChanged();
    partial void Onformat_idChanging(System.Nullable<int> value);
    partial void Onformat_idChanged();
    partial void Onthemes_idChanging(System.Nullable<int> value);
    partial void Onthemes_idChanged();
    partial void Onkategory_idChanging(System.Nullable<int> value);
    partial void Onkategory_idChanged();
    #endregion
		
		public books_new()
		{
			this._Spr_format = default(EntityRef<Spr_format>);
			this._Spr_izd = default(EntityRef<Spr_izd>);
			this._Spr_themes = default(EntityRef<Spr_themes>);
			this._Spr_kategory = default(EntityRef<Spr_kategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int N
		{
			get
			{
				return this._N;
			}
			set
			{
				if ((this._N != value))
				{
					this.OnNChanging(value);
					this.SendPropertyChanging();
					this._N = value;
					this.SendPropertyChanged("N");
					this.OnNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Float")]
		public System.Nullable<double> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New", DbType="Bit NOT NULL")]
		public bool New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this.OnNewChanging(value);
					this.SendPropertyChanging();
					this._New = value;
					this.SendPropertyChanged("New");
					this.OnNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", DbType="Float")]
		public System.Nullable<double> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				if ((this._Pages != value))
				{
					this.OnPagesChanging(value);
					this.SendPropertyChanging();
					this._Pages = value;
					this.SendPropertyChanged("Pages");
					this.OnPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressrun", DbType="Float")]
		public System.Nullable<double> Pressrun
		{
			get
			{
				return this._Pressrun;
			}
			set
			{
				if ((this._Pressrun != value))
				{
					this.OnPressrunChanging(value);
					this.SendPropertyChanging();
					this._Pressrun = value;
					this.SendPropertyChanged("Pressrun");
					this.OnPressrunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_izd_id", DbType="Int")]
		public System.Nullable<int> izd_id
		{
			get
			{
				return this._izd_id;
			}
			set
			{
				if ((this._izd_id != value))
				{
					if (this._Spr_izd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onizd_idChanging(value);
					this.SendPropertyChanging();
					this._izd_id = value;
					this.SendPropertyChanged("izd_id");
					this.Onizd_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_format_id", DbType="Int")]
		public System.Nullable<int> format_id
		{
			get
			{
				return this._format_id;
			}
			set
			{
				if ((this._format_id != value))
				{
					if (this._Spr_format.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onformat_idChanging(value);
					this.SendPropertyChanging();
					this._format_id = value;
					this.SendPropertyChanged("format_id");
					this.Onformat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_themes_id", DbType="Int")]
		public System.Nullable<int> themes_id
		{
			get
			{
				return this._themes_id;
			}
			set
			{
				if ((this._themes_id != value))
				{
					if (this._Spr_themes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onthemes_idChanging(value);
					this.SendPropertyChanging();
					this._themes_id = value;
					this.SendPropertyChanged("themes_id");
					this.Onthemes_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategory_id", DbType="Int")]
		public System.Nullable<int> kategory_id
		{
			get
			{
				return this._kategory_id;
			}
			set
			{
				if ((this._kategory_id != value))
				{
					if (this._Spr_kategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkategory_idChanging(value);
					this.SendPropertyChanging();
					this._kategory_id = value;
					this.SendPropertyChanged("kategory_id");
					this.Onkategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_format_books_new", Storage="_Spr_format", ThisKey="format_id", OtherKey="id", IsForeignKey=true)]
		public Spr_format Spr_format
		{
			get
			{
				return this._Spr_format.Entity;
			}
			set
			{
				Spr_format previousValue = this._Spr_format.Entity;
				if (((previousValue != value) 
							|| (this._Spr_format.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spr_format.Entity = null;
						previousValue.books_new.Remove(this);
					}
					this._Spr_format.Entity = value;
					if ((value != null))
					{
						value.books_new.Add(this);
						this._format_id = value.id;
					}
					else
					{
						this._format_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Spr_format");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_izd_books_new", Storage="_Spr_izd", ThisKey="izd_id", OtherKey="id", IsForeignKey=true)]
		public Spr_izd Spr_izd
		{
			get
			{
				return this._Spr_izd.Entity;
			}
			set
			{
				Spr_izd previousValue = this._Spr_izd.Entity;
				if (((previousValue != value) 
							|| (this._Spr_izd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spr_izd.Entity = null;
						previousValue.books_new.Remove(this);
					}
					this._Spr_izd.Entity = value;
					if ((value != null))
					{
						value.books_new.Add(this);
						this._izd_id = value.id;
					}
					else
					{
						this._izd_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Spr_izd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_themes_books_new", Storage="_Spr_themes", ThisKey="themes_id", OtherKey="id", IsForeignKey=true)]
		public Spr_themes Spr_themes
		{
			get
			{
				return this._Spr_themes.Entity;
			}
			set
			{
				Spr_themes previousValue = this._Spr_themes.Entity;
				if (((previousValue != value) 
							|| (this._Spr_themes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spr_themes.Entity = null;
						previousValue.books_new.Remove(this);
					}
					this._Spr_themes.Entity = value;
					if ((value != null))
					{
						value.books_new.Add(this);
						this._themes_id = value.id;
					}
					else
					{
						this._themes_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Spr_themes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_kategory_books_new", Storage="_Spr_kategory", ThisKey="kategory_id", OtherKey="Id", IsForeignKey=true)]
		public Spr_kategory Spr_kategory
		{
			get
			{
				return this._Spr_kategory.Entity;
			}
			set
			{
				Spr_kategory previousValue = this._Spr_kategory.Entity;
				if (((previousValue != value) 
							|| (this._Spr_kategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spr_kategory.Entity = null;
						previousValue.books_new.Remove(this);
					}
					this._Spr_kategory.Entity = value;
					if ((value != null))
					{
						value.books_new.Add(this);
						this._kategory_id = value.Id;
					}
					else
					{
						this._kategory_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Spr_kategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spr_format")]
	public partial class Spr_format : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Format;
		
		private int _id;
		
		private EntitySet<books_new> _books_new;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Spr_format()
		{
			this._books_new = new EntitySet<books_new>(new Action<books_new>(this.attach_books_new), new Action<books_new>(this.detach_books_new));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(255)")]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_format_books_new", Storage="_books_new", ThisKey="id", OtherKey="format_id")]
		public EntitySet<books_new> books_new
		{
			get
			{
				return this._books_new;
			}
			set
			{
				this._books_new.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_format = this;
		}
		
		private void detach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_format = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spr_izd")]
	public partial class Spr_izd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Izd;
		
		private int _id;
		
		private EntitySet<books_new> _books_new;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIzdChanging(string value);
    partial void OnIzdChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Spr_izd()
		{
			this._books_new = new EntitySet<books_new>(new Action<books_new>(this.attach_books_new), new Action<books_new>(this.detach_books_new));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Izd", DbType="NVarChar(255)")]
		public string Izd
		{
			get
			{
				return this._Izd;
			}
			set
			{
				if ((this._Izd != value))
				{
					this.OnIzdChanging(value);
					this.SendPropertyChanging();
					this._Izd = value;
					this.SendPropertyChanged("Izd");
					this.OnIzdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_izd_books_new", Storage="_books_new", ThisKey="id", OtherKey="izd_id")]
		public EntitySet<books_new> books_new
		{
			get
			{
				return this._books_new;
			}
			set
			{
				this._books_new.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_izd = this;
		}
		
		private void detach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_izd = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spr_themes")]
	public partial class Spr_themes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Themes;
		
		private int _id;
		
		private EntitySet<books_new> _books_new;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThemesChanging(string value);
    partial void OnThemesChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Spr_themes()
		{
			this._books_new = new EntitySet<books_new>(new Action<books_new>(this.attach_books_new), new Action<books_new>(this.detach_books_new));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Themes", DbType="NVarChar(255)")]
		public string Themes
		{
			get
			{
				return this._Themes;
			}
			set
			{
				if ((this._Themes != value))
				{
					this.OnThemesChanging(value);
					this.SendPropertyChanging();
					this._Themes = value;
					this.SendPropertyChanged("Themes");
					this.OnThemesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_themes_books_new", Storage="_books_new", ThisKey="id", OtherKey="themes_id")]
		public EntitySet<books_new> books_new
		{
			get
			{
				return this._books_new;
			}
			set
			{
				this._books_new.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_themes = this;
		}
		
		private void detach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_themes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spr_kategory")]
	public partial class Spr_kategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Category;
		
		private int _Id;
		
		private EntitySet<books_new> _books_new;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public Spr_kategory()
		{
			this._books_new = new EntitySet<books_new>(new Action<books_new>(this.attach_books_new), new Action<books_new>(this.detach_books_new));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spr_kategory_books_new", Storage="_books_new", ThisKey="Id", OtherKey="kategory_id")]
		public EntitySet<books_new> books_new
		{
			get
			{
				return this._books_new;
			}
			set
			{
				this._books_new.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_kategory = this;
		}
		
		private void detach_books_new(books_new entity)
		{
			this.SendPropertyChanging();
			entity.Spr_kategory = null;
		}
	}
}
#pragma warning restore 1591
